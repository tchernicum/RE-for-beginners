.text:00000000 f:
; \$a0=a
; \$a1=b
; \$a2=c
.text:00000000        mult    $a1, $a0
.text:00000004        mflo    $v0
.text:00000008        jr      $ra
.text:0000000C        addu    $v0, $a2, $v0	; slot de délai de branchement
; au retour le résultat est dans \$v0
.text:00000010 main:
.text:00000010
.text:00000010 var_10 = -0x10
.text:00000010 var_4  = -4
.text:00000010
.text:00000010        lui     $gp, (__gnu_local_gp >> 16)
.text:00000014        addiu   $sp, -0x20
.text:00000018        la      $gp, (__gnu_local_gp & 0xFFFF)
.text:0000001C        sw      $ra, 0x20+var_4($sp)
.text:00000020        sw      $gp, 0x20+var_10($sp)
; définir c:
.text:00000024        li      $a2, 3
; définir a:
.text:00000028        li      $a0, 1
.text:0000002C        jal     f
; définir b:
.text:00000030        li      $a1, 2		; slot de délai de branchement
; le résultat est maintenant dans \$v0
.text:00000034        lw      $gp, 0x20+var_10($sp)
.text:00000038        lui     $a0, ($LC0 >> 16)
.text:0000003C        lw      $t9, (printf & 0xFFFF)($gp)
.text:00000040        la      $a0, ($LC0 & 0xFFFF)
.text:00000044        jalr    $t9
; prend le résultat de la fonction f() et le passe en second argument à printf():
.text:00000048        move    $a1, $v0		; slot de délai de branchement
.text:0000004C        lw      $ra, 0x20+var_4($sp)
.text:00000050        move    $v0, $zero
.text:00000054        jr      $ra
.text:00000058        addiu   $sp, 0x20	; slot de délai de branchement
