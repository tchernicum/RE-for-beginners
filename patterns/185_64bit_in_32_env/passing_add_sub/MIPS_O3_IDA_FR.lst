f_add:
; \$a0 - partie haute de a
; \$a1 - partie basse de a
; \$a2 - partie haute de b
; \$a3 - partie basse de b
                addu    $v1, $a3, $a1 ; ajouter les parties basses
                addu    $a0, $a2, $a0 ; ajouter les parties hautes
; est-ce qu'une retenue a été générée lors de l'addition des parties basses?
; si oui, mettre \$v0 à 1
                sltu    $v0, $v1, $a3
                jr      $ra
; ajouter 1 à la partie haute du résultat si la retenue doit être générée:
                addu    $v0, $a0 ; slot de délai de branchement
; \$v0 - partie haute du résultat
; \$v1 - partie basse du résultat

f_sub:
; \$a0 - partie haute de a
; \$a1 - partie basse de a
; \$a2 - partie haute de b
; \$a3 - partie basse de b
                subu    $v1, $a1, $a3 ; soustraire les parties basses
                subu    $v0, $a0, $a2 ; soustraire les parties hautes
; est-ce qu'une retenue a été générée lors de la soustraction des parties basses?
; si oui, mettre \$a0 à 1
                sltu    $a1, $v1
                jr      $ra
; soustraire 1 à la partie haute du résultat si la retenue doit être générée:
                subu    $v0, $a1 ; slot de délai de branchement
; \$v0 - partie haute du résultat
; \$v1 - partie basse du résultat

f_add_test:

var_10          = -0x10
var_4           = -4

                lui     $gp, (__gnu_local_gp >> 16)
                addiu   $sp, -0x20
                la      $gp, (__gnu_local_gp & 0xFFFF)
                sw      $ra, 0x20+var_4($sp)
                sw      $gp, 0x20+var_10($sp)
                lui     $a1, 0x73CE
                lui     $a3, 0x7593
                li      $a0, 0xB3A
                li      $a3, 0x75939F79
                li      $a2, 0x1555
                jal     f_add
                li      $a1, 0x73CE2FF2
                lw      $gp, 0x20+var_10($sp)
                lui     $a0, ($LC0 >> 16)  # \verb|"%lld\n"|
                lw      $t9, (printf & 0xFFFF)($gp)
                lw      $ra, 0x20+var_4($sp)
                la      $a0, ($LC0 & 0xFFFF)  # \verb|"%lld\n"|
                move    $a3, $v1
                move    $a2, $v0
                jr      $t9
                addiu   $sp, 0x20

$LC0:           .ascii "%lld\n"<0>
