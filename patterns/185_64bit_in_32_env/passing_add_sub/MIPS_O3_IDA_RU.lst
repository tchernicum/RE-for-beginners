f_add:
; \$a0 - старшая часть a
; \$a1 - младшая часть a
; \$a2 - старшая часть b
; \$a3 - младшая часть b
                addu    $v1, $a3, $a1 ; суммировать младшие части
                addu    $a0, $a2, $a0 ; суммировать старшие части
; будет ли перенос сгенерирован во время суммирования младших частей?
; установить \$v0 в 1, если да
                sltu    $v0, $v1, $a3
                jr      $ra
; прибавить 1 к старшей части результата, если перенос должен был быть сгенерирован
                addu    $v0, $a0 ; branch delay slot
; \$v0 - старшая часть результата
; \$v1 - младшая часть результата

f_sub:
; \$a0 - старшая часть a
; \$a1 - младшая часть a
; \$a2 - старшая часть b
; \$a3 - младшая часть b
                subu    $v1, $a1, $a3 ; вычитать младшие части
                subu    $v0, $a0, $a2 ; вычитать старшие части
; будет ли перенос сгенерирован во время вычитания младших частей?
; установить \$a0 в 1, если да
                sltu    $a1, $v1
                jr      $ra
; вычесть 1 из старшей части результата, если перенос должен был быть сгенерирован
                subu    $v0, $a1 ; branch delay slot
; \$v0 - старшая часть результата
; \$v1 - младшая часть результата

f_add_test:

var_10          = -0x10
var_4           = -4

                lui     $gp, (__gnu_local_gp >> 16)
                addiu   $sp, -0x20
                la      $gp, (__gnu_local_gp & 0xFFFF)
                sw      $ra, 0x20+var_4($sp)
                sw      $gp, 0x20+var_10($sp)
                lui     $a1, 0x73CE
                lui     $a3, 0x7593
                li      $a0, 0xB3A
                li      $a3, 0x75939F79
                li      $a2, 0x1555
                jal     f_add
                li      $a1, 0x73CE2FF2
                lw      $gp, 0x20+var_10($sp)
                lui     $a0, ($LC0 >> 16)  # \verb|"%lld\n"|
                lw      $t9, (printf & 0xFFFF)($gp)
                lw      $ra, 0x20+var_4($sp)
                la      $a0, ($LC0 & 0xFFFF)  # \verb|"%lld\n"|
                move    $a3, $v1
                move    $a2, $v0
                jr      $t9
                addiu   $sp, 0x20

$LC0:           .ascii "%lld\n"<0>
