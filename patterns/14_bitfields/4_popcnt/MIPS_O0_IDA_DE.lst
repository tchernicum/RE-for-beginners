f:
; IDA vergibt keine Variablennamen, diese wurden manuell hinzugefügt:
rt              = -0x10
i               = -0xC
var_4           = -4
a               =  0

                addiu   $sp, -0x18
                sw      $fp, 0x18+var_4($sp)
                move    $fp, $sp
                sw      $a0, 0x18+a($fp)
; initialisiere rt und i mit 0:
                sw      $zero, 0x18+rt($fp)
                sw      $zero, 0x18+i($fp)
; Springe, um Schleifenbedingung zu prüfen:
                b       loc_68
                or      $at, $zero ; branch delay slot, NOP

loc_20:
                li      $v1, 1
                lw      $v0, 0x18+i($fp)
                or      $at, $zero ; lade delay slot, NOP
                sllv    $v0, $v1, $v0
; \$v0 = 1<<i
                move    $v1, $v0
                lw      $v0, 0x18+a($fp)
                or      $at, $zero ; lade delay slot, NOP
                and     $v0, $v1, $v0
; \$v0 = a \& (1<<i)
; ist a \& (1<<i) gleich null? Dann springe zu loc\_58:
                beqz    $v0, loc_58
                or      $at, $zero
; kein Sprung, d.h. a \& (1<<i)!=0, also erhöhe "rt":
                lw      $v0, 0x18+rt($fp)
                or      $at, $zero ; lade delay slot, NOP
                addiu   $v0, 1
                sw      $v0, 0x18+rt($fp)

loc_58:
; erhöhe i:
                lw      $v0, 0x18+i($fp)
                or      $at, $zero ; lade delay slot, NOP
                addiu   $v0, 1
                sw      $v0, 0x18+i($fp)

loc_68:
; lade i und vergleiche mit 0x20 (32).
; springe zu loc\_20 , falls kleiner 0x20 (32):
                lw      $v0, 0x18+i($fp)
                or      $at, $zero ; lade delay slot, NOP
                slti    $v0, 0x20  # ' '
                bnez    $v0, loc_20
                or      $at, $zero ; branch delay slot, NOP
; Funktionsepilog. Wert rt wird zurückgegeben:
                lw      $v0, 0x18+rt($fp)
                move    $sp, $fp   ; lade delay slot
                lw      $fp, 0x18+var_4($sp)
                addiu   $sp, 0x18  ; lade delay slot
                jr      $ra
                or      $at, $zero ; branch delay slot, NOP
