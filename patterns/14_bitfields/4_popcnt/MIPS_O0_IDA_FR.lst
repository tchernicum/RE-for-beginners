f:
; IDA ne connaît pas le nom des variables, nous les donnons manuellement:
rt              = -0x10
i               = -0xC
var_4           = -4
a               =  0

                addiu   $sp, -0x18
                sw      $fp, 0x18+var_4($sp)
                move    $fp, $sp
                sw      $a0, 0x18+a($fp)
; initialiser les variables rt et i à zéro:
                sw      $zero, 0x18+rt($fp)
                sw      $zero, 0x18+i($fp)
; saut aux instructions de test de la boucle
                b       loc_68
                or      $at, $zero ; slot de délai de branchement, NOP

loc_20:
                li      $v1, 1
                lw      $v0, 0x18+i($fp)
                or      $at, $zero ; slot de délai de chargement, NOP
                sllv    $v0, $v1, $v0
; \$v0 = 1<<i
                move    $v1, $v0
                lw      $v0, 0x18+a($fp)
                or      $at, $zero ; slot de délai de chargement, NOP
                and     $v0, $v1, $v0
; \$v0 = a \& (1<<i)
; est-ce que a \& (1<<i) est égal à zéro? sauter en loc\_58 si oui:
                beqz    $v0, loc_58
                or      $at, $zero
; il n'y pas eu de saut, cela signifie que a \& (1<<i)!=0, il faut donc incrémenter "rt":
                lw      $v0, 0x18+rt($fp)
                or      $at, $zero ; slot de délai de chargement, NOP
                addiu   $v0, 1
                sw      $v0, 0x18+rt($fp)

loc_58:
; incrémenter i:
                lw      $v0, 0x18+i($fp)
                or      $at, $zero ; slot de délai de chargement, NOP
                addiu   $v0, 1
                sw      $v0, 0x18+i($fp)

loc_68:
; charger i et le comparer avec 0x20 (32).
; sauter en loc\_20 si il vaut moins de 0x20 (32):
                lw      $v0, 0x18+i($fp)
                or      $at, $zero ; slot de délai de chargement, NOP
                slti    $v0, 0x20  # ' '
                bnez    $v0, loc_20
                or      $at, $zero ; slot de délai de branchement, NOP
;  épilogue de la fonction. renvoyer rt:
                lw      $v0, 0x18+rt($fp)
                move    $sp, $fp   ; slot de délai de chargement
                lw      $fp, 0x18+var_4($sp)
                addiu   $sp, 0x18  ; slot de délai de chargement
                jr      $ra
                or      $at, $zero ; slot de délai de branchement, NOP
