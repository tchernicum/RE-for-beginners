f:
; \$a0=a
; rt bleibt in \$v0:
                move    $v0, $zero
; i bleibt in \$v1:
                move    $v1, $zero
                li      $t0, 1
                li      $a3, 32
                sllv    $a1, $t0, $v1
; \$a1 = \$t0<<\$v1 = 1<<i

loc_14:
                and     $a1, $a0
; \$a1 = a\&(1<<i)
; erhöhe i:
                addiu   $v1, 1
; springe zu loc\_28 , falls a\&(1<<i)==0 und erhöhe rt:
                beqz    $a1, loc_28
                addiu   $a2, $v0, 1
; wenn BEQZ nicht ausgelöst wurde, speichere neues rt nach \$v0:
                move    $v0, $a2

loc_28:
; falls i!=32, springe zu loc\_14 und bereite nächsten verschobenen Wert vor:
                bne     $v1, $a3, loc_14
                sllv    $a1, $t0, $v1
; return
                jr      $ra
                or      $at, $zero ; branch delay slot, NOP
