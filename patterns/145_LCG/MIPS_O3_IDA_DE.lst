my_srand:
; speichere \$a0 in rand\_state:
                lui     $v0, (rand_state >> 16)
                jr      $ra
                sw      $a0, rand_state
my_rand:
; lade rand\_state nach \$v0:
                lui     $v1, (rand_state >> 16)
                lw      $v0, rand_state
                or      $at, $zero  ; lade delay slot
; multipliziere rand\_state in \$v0 mit 1664525 (RNG\_a):
                sll     $a1, $v0, 2
                sll     $a0, $v0, 4
                addu    $a0, $a1, $a0
                sll     $a1, $a0, 6
                subu    $a0, $a1, $a0
                addu    $a0, $v0
                sll     $a1, $a0, 5
                addu    $a0, $a1
                sll     $a0, 3
                addu    $v0, $a0, $v0
                sll     $a0, $v0, 2
                addu    $v0, $a0
; addiere 1013904223 (RNG\_c)
; der LI Befehl ist von IDA aus LUI und ORI zusammengesetzt
                li      $a0, 0x3C6EF35F 
                addu    $v0, $a0
; speichere in rand\_state:
                sw      $v0, (rand_state & 0xFFFF)($v1)
                jr      $ra
                andi    $v0, 0x7FFF ; branch delay slot
