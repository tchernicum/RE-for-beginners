my_strlen:
	mov	x1, x0
	; X1は一時的なポインタ(eos)で、 ﾂｧ\emph{cursor}ﾂｧ のようにふるまう
.L58:
	; X1 から W2にバイトをロードし、X1 (post-index)をインクリメント
	ldrb	w2, [x1],1
	; ゼロでなければ分岐：W2と0を比較し、異なれば.L58にジャンプ
	cbnz	w2, .L58
	; X0の初期ポインタとX1の現在のアドレスとの差分を計算
	sub	x0, x1, x0
	; 結果の下位32ビットをデクリメント
	sub	w0, w0, #1
	ret
