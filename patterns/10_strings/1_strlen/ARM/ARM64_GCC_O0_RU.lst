my_strlen:
; пролог функции
	sub	sp, sp, #32
; первый аргумент (str) будет записан в [sp,8]
	str	x0, [sp,8]
	ldr	x0, [sp,8]
; скопировать переменную "str" в "eos"
	str	x0, [sp,24]
	nop
.L62:
; eos++
	ldr	x0, [sp,24]  ; загрузить "eos" в X0
	add	x1, x0, 1    ; инкремент X0
	str	x1, [sp,24]  ; сохранить X0 в "eos"
; загрузить байт из памяти по адресу в X0 в W0
	ldrb	w0, [x0]
; это ноль? (WZR это 32-битный регистр всегда содержащий ноль)
	cmp	w0, wzr
; переход если не ноль (Branch Not Equal)
	bne	.L62
; найден нулевой байт. вычисляем разницу.
; загрузить "eos" в X1
	ldr	x1, [sp,24]
; загрузить "str" в X0
	ldr	x0, [sp,8]
; вычислить разницу
	sub	x0, x1, x0
; декремент результата
	sub	w0, w0, #1
; эпилог функции
	add	sp, sp, 32
	ret
