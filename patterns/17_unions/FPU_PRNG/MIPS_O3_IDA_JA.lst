float_rand:

var_10          = -0x10
var_4           = -4

                lui     $gp, (__gnu_local_gp >> 16)
                addiu   $sp, -0x20
                la      $gp, (__gnu_local_gp & 0xFFFF)
                sw      $ra, 0x20+var_4($sp)
                sw      $gp, 0x20+var_10($sp)
; my_rand()呼び出し
                jal     my_rand
                or      $at, $zero ; 分岐遅延スロット, NOP
; $v0=32ビット擬似乱数値
                li      $v1, 0x7FFFFF
; $v1=0x7FFFFF
                and     $v1, $v0, $v1
; $v1=疑似乱数値 & 0x7FFFFF
                lui     $a0, 0x3F80
; $a0=0x3F800000
                or      $v1, $a0
; $v1=疑似乱数値 & 0x7FFFFF | 0x3F800000
; 次の命令の問題はまだ難しい
                lui     $v0, ($LC0 >> 16)
; 1.0を$f0にロード
                lwc1    $f0, $LC0
; $v1からコプロセッサ1に値をムーブ(レジスタ$f2に)
; ビット単位のコピーのように動作し、変換は行われません
                mtc1    $v1, $f2
                lw      $ra, 0x20+var_4($sp)
; 1.0を引いて$f0に結果を残す
                sub.s   $f0, $f2, $f0
                jr      $ra
                addiu   $sp, 0x20  ; 分岐遅延スロット

main:

var_18          = -0x18
var_10          = -0x10
var_C           = -0xC
var_8           = -8
var_4           = -4

                lui     $gp, (__gnu_local_gp >> 16)
                addiu   $sp, -0x28
                la      $gp, (__gnu_local_gp & 0xFFFF)
                sw      $ra, 0x28+var_4($sp)
                sw      $s2, 0x28+var_8($sp)
                sw      $s1, 0x28+var_C($sp)
                sw      $s0, 0x28+var_10($sp)
                sw      $gp, 0x28+var_18($sp)
                lw      $t9, (time & 0xFFFF)($gp)
                or      $at, $zero ; ロード遅延スロット, NOP
                jalr    $t9
                move    $a0, $zero ; 分岐遅延スロット
                lui     $s2, ($LC1 >> 16)  # "%f\n"
                move    $a0, $v0
                la      $s2, ($LC1 & 0xFFFF)  # "%f\n"
                move    $s0, $zero
                jal     my_srand
                li      $s1, 0x64  # 'd' ; 分岐遅延スロット

loc_104:
                jal     float_rand
                addiu   $s0, 1
                lw      $gp, 0x28+var_18($sp)
; float_rand()からdouble型に値を変換する（printf()が必要とする）
                cvt.d.s $f2, $f0
                lw      $t9, (printf & 0xFFFF)($gp)
                mfc1    $a3, $f2
                mfc1    $a2, $f3
                jalr    $t9
                move    $a0, $s2
                bne     $s0, $s1, loc_104
                move    $v0, $zero
                lw      $ra, 0x28+var_4($sp)
                lw      $s2, 0x28+var_8($sp)
                lw      $s1, 0x28+var_C($sp)
                lw      $s0, 0x28+var_10($sp)
                jr      $ra
                addiu   $sp, 0x28 ; 分岐遅延スロット

$LC1:           .ascii "%f\n"<0>
$LC0:           .float 1.0
