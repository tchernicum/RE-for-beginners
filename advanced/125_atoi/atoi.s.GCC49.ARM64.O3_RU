my_atoi:
; загрузить входной символ в W1
	ldrb	w1, [x0]
	mov	x2, x0
; X2=адрес входной строки
; загруженный символ - 0?
; перейти на выход, если это так
; W1 будет содержать 0 в этом случае.
; он будет перезагружен в W0 на L4.
	cbz	w1, .L4
; W0 будет содержать переменную "rt"
; инициализировать её нулем:
	mov	w0, 0
.L3:
; вычесть 48 или '0' из входной переменной и оставить результат в W3:
	sub	w3, w1, #48
; загрузить следующий символ по адресу X2+1 в W1 
; с пре-инкрементом:
	ldrb	w1, [x2,1]!
	add	w0, w0, w0, lsl 2
; W0=W0+W0<<2=W0+W0*4=rt*5
	add	w0, w3, w0, lsl 1
; W0=входная цифра + W0<<1 = входная цифра + rt*5*2 = входная цифра + rt*10
; если только что загруженный символ - это не нулевой байт, перейти на начало цикла
	cbnz	w1, .L3
; значение для возврата (rt) в W0, готовое для использования в вызывающей ф-ции
	ret
.L4:
	mov	w0, w1
	ret
